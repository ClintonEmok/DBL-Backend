theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map.data <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
"""
map.grouped <- map.data %>% group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
"""
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,20)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
tracking_data <- read.csv('metro_data.csv', sep = ';')
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map.data <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
View(map.data)
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,20)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point() +
scale_size(range = c(3,20)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
dev.off()
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point() +
scale_size(range = c(3,20)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,20)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map.grouped <- map.data %>% group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
library(dplyr)
map.grouped <- map.data %>% group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
map.grouped <- map.data %>% group_by_(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.grouped <- map.data %>% group_by(user.index)
map.grouped <- map.data %>% group_by(user.index)
?group_by
map.grouped <- map.data %>% dplyr::group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
map.grouped <- map.data %>% ggpubr::group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
map.grouped <- map.data %>% dplyr::group_by(user.index)
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map.data <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 10, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
animate(map_anim, nframes = 100, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
animate(map_anim, nframes = 43, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
library(dplyr)
map.grouped <- map.data %>% dplyr::group_by(user.index)
map.average <- map.grouped %>% summarise(
AvgX = mean(MappedFixationPointX),
AvgY = mean(MappedFixationPointX),
AvgDuration = mean(FixationDuration)
)
map.average
map_plot <- ggplot(map.average, aes(x = MappedFixationPointX, y = MappedFixationPointY)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
View(map.average)
map_plot <- ggplot(map.average, aes(x = AvgX, y = AvgY)) +
background_image(img) +
geom_point(aes(size = AvgDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot
map_plot <- ggplot(map.average, aes(x = AvgX, y = AvgY)) +
background_image(img) +
geom_point(aes(size = AvgDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot <- ggplot(map.average, aes(x = AvgX, y = AvgY)) +
background_image(img) +
geom_line() +
geom_point(aes(size = AvgDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
print(map_plot)
map_plot
View(map_plot)
map_plot <- ggplot(data = map.average, aes(x = AvgX, y = AvgY)) +
#background_image(img) +
geom_line() +
geom_point(aes(size = AvgDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
?ggplot
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 42, fps = 2, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map_plot <- ggplot(map.average, aes(x = AvgX, y = AvgY)) +
#background_image(img) +
geom_point(aes(size = AvgDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot <- ggplot(map.data, aes(x = MappedFixationDurationX, y = MappedFixationDurationY)) +
#background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY)) +
#background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
dev.off()
map_plot
?accumulate_by
library(plotly)
?accumulate_by
?getvar
?getLevels
library(plotly)
map.plotly <- plot_ly(data = map.data,
x = ~MappedFixationPointX,
y = ~MappedFixationPointY,
type = 'scatter',
mode = 'markers',
size = ~FixationDuration,
frame = ~user.index
)
map.plotly <- map.plotly %>% layout(
yaxis = list(range = c(dim_img[1], 50))
xaxis = list(range = c(50, dim_img[2]))
)
map.plotly
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map.data <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
library(plotly)
map.plotly <- plot_ly(data = map.data,
x = ~MappedFixationPointX,
y = ~MappedFixationPointY,
type = 'scatter',
mode = 'markers',
size = ~FixationDuration,
frame = ~user.index
)
map.plotly <- map.plotly %>% layout(
yaxis = list(range = c(dim_img[1], 50))
xaxis = list(range = c(50, dim_img[2]))
)
map.plotly
library(plotly)
map.plotly <- plot_ly(data = map.data,
x = ~MappedFixationPointX,
y = ~MappedFixationPointY,
type = 'scatter',
mode = 'markers',
size = ~FixationDuration,
frame = ~user.index
)
map.plotly <- map.plotly %>% layout(
yaxis = list(range = c(dim_img[1], 50)),
xaxis = list(range = c(50, dim_img[2]))
)
map.plotly
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map.data <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 43, fps = 3, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 10)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot <- ggplot(tracking_data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot <- ggplot(tracking_data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
#background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
View(tracking_data)
map.data <- tracking_data[tracking_data["StimuliName"] == "02_Berlin_S1.jpg",]
rownames(map.data) <- 1:nrow(map.data)
map.data$index <- 1:nrow(map.data)
map.data$user.index <- 1:nrow(map.data)
user.count <- 1
for(i in 2:nrow(map.data)){
if(map.data[i, 7] == map.data[i-1, 7]){
user.count <- user.count + 1
map.data[i, 10] <- user.count
} else {
user.count <- 1
map.data[i, 10] = user.count
}
}
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
#facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_plot
warnings()
View(map.data)
map_plot
library(plotly)
map.plotly <- plot_ly(data = map.data,
x = ~MappedFixationPointX,
y = ~MappedFixationPointY,
type = 'scatter',
mode = 'markers',
size = ~FixationDuration,
frame = ~user.index
)
map.plotly <- map.plotly %>% layout(
yaxis = list(range = c(dim_img[1], 50)),
xaxis = list(range = c(50, dim_img[2]))
)
map.plotly
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(3,15)) +
#facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 80, fps = 5, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 15)
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
library(plyr)
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 80, fps = 5, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 15)
animate(map_anim, nframes = 82, fps = 4, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 12)
map_plot <- ggplot(map.data, aes(x = MappedFixationPointX, y = MappedFixationPointY, color = user)) +
background_image(img) +
geom_point(aes(size = FixationDuration)) +
scale_size(range = c(8,30)) +
#facet_wrap(~StimuliName) +
xlim(50,dim_img[2])+
ylim(dim_img[1], 50)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(user.index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 82, fps = 4, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 12)
animate(map_anim, nframes = 82, fps = 4, renderer = gifski_renderer(file = "map animation.gif"),
width = dim_img[2] + 50, height = dim_img[1], end_pause = 12)

library(readr)
metro_data <- read_csv("metro_data.csv")
View(metro_data)
library(readr)
metro_data <- read_delim("metro_data.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(metro_data)
tracking_data <- read.csv("metro_data.csv", sep = ";")
summary(tracking_data)
tracking_data <- read.csv('metro_data.csv', sep = ';')
View(tracking_data)
names(tracking_data)
tracking_data$MappedFixationPointX
dim(tracking_data)
test1 <- boxplot(tracking_data$MappedFixationPointX)
qqline(tracking_data$MappedFixationPointX)
test1 <- qqline(tracking_data$MappedFixationPointX)
test1 <- qqnorm(tracking_data$MappedFixationPointX)
qqnorm(tracking_data$MappedFixationPointX)
qqline(tracking_data$MappedFixationPointX)
par(mfrow = c(2,2))
density(tracking_data$MappedFixationPointX)
hist(tracking_data$MappedFixationPointX)
boxplot(tracking_data$MappedFixationPointX)
tracking_data <- read.csv('metro_data.csv', sep = ';')
par(mfrow = c(2,2))
qqnorm(tracking_data$MappedFixationPointX)
qqline(tracking_data$MappedFixationPointX)
hist(tracking_data$MappedFixationPointX)
boxplot(tracking_data$MappedFixationPointX)
library(lattice)
install.packages("lattice")
library(lattice)
View(metro_data)
dotplot(MappedFixationPointY~MappedFixationPointX, data = tracking_data)
xyplot(MappedFixationPointY~MappedFixationPointX, data = tracking_data)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data)
install.packages("psych")
library(psych)
library(datasets)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1200, 0),
xlim = c(0, 1200)
)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1200, 0),
xlim = c(0, 1500)
)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1200, 0),
xlim = c(0, 2000)
)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1200, 0),
xlim = c(0, 1800)
)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1200, 0),
xlim = c(0, 1800)
)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
install.packages(c("animate", "gganimate", "plotly"))
library(animate)
install.packages("animate")
install.packages("Animate")
setRepositories()
?setRepositories
library(gganimate)
setRepositories()
install.packages(animate)
install.packages(animate)
install.packages("animate")
setRepositories()
install.packages("animate")
install.packages("animation")
install.packages("animation")
install.packages("animation", dependencies = True, repos = "https://cran.r-project.org/src/contrib/animation_2.6.tar.gz")
install.packages("animation", repos = "https://cran.r-project.org/src/contrib/animation_2.6.tar.gz")
install.packages("animation", repos = "https://cran.r-project.org/web/packages/animation/index.html")
setRepositories()
library(lattice)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
tracking_data <- read.csv('metro_data.csv', sep = ';')
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
tracking_data <- read.csv('metro_data.csv', sep = ';')
library(lattice)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
library(animation)
tracking_data <- read.csv('metro_data.csv', sep = ';')
library(lattice)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
library(animation)
View(test1)
View(test1)
View(tracking_data)
library(ggplot2)
library(gganimate)
01_Antwerp_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerp_S1"]
Antwerp_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerp_S1"]
Antwerp_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerp_S1",]
View(Antwerp_S1)
View(tracking_data)
Antwerpen_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1",]
tracking_data <- read.csv('metro_data.csv', sep = ';')
library(lattice)
xyplot(MappedFixationPointY~MappedFixationPointX | StimuliName, data = tracking_data,
ylim = c(1300, 0),
xlim = c(0, 1800)
)
library(ggplot2)
library(gganimate)
Antwerpen_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1",]
View(Antwerpen_S1)
Antwerpen_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, Y = MappedFixationPointY, color = user))
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
annotation_custom(rasterGrob(img,
width = dim_img[2],
height = dim_img[1]),
-Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(1,10)) +
scale_y_reverse()
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
Antwerpen_S1 <- tracking_data[tracking_data["StimuliName"] == "01_Antwerpen_S1.jpg",]
img.file = file.choose()
img <- jpeg::readJPEG(img.file)
dim_img <- dim(img)
dim_img[2]
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
annotation_custom(rasterGrob(img,
width = dim_img[2],
height = dim_img[1]),
-Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(1,10)) +
scale_y_reverse()
antwerp_plot
?rasterGrob
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(1,10)) +
scale_y_reverse()
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
install.packages("gganimate")
library(ggplot2)
library(gganimate)
library(jpeg)
library(ggpubr)
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(1,10)) +
scale_y_reverse()
?rasterGrob
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(1,10)) +
scale_y_reverse()
antwerp_plot
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,8)) +
scale_y_reverse()
antwerp_plot
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
scale_y_reverse()
antwerp_plot
?animate
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
scale_y_reverse()
antwerp_plot
antwerp_plot <- ggplot(tracking_data, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
facet_wrap(~StimuliName) +
scale_y_reverse()
antwerp_plot
antwerp_plot <- ggplot(tracking_data, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
#background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
facet_wrap(~StimuliName) +
#scale_y_reverse() +
xlim(0,1650)+
ylim(1200,0)
antwerp_plot
antwerp_anim = antwerp_plot + transition_time(FixationIndex)
animate(antwerp_anim, nframes = 30, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE))
install.packages("gifski")
antwerp_anim = antwerp_plot + transition_time(FixationIndex)
animate(antwerp_anim, nframes = 30, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE))
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
#facet_wrap(~StimuliName) +
scale_y_reverse() +
#xlim(0,1650)+
#ylim(1200,0)
antwerp_plot
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
#facet_wrap(~StimuliName) +
scale_y_reverse()
antwerp_plot
xlim(0,1650)+
ylim(1200,0)
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,1650)+
ylim(1200,0)
antwerp_plot
dim_img[1]
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(0.5,10)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
antwerp_plot
antwerp_anim = antwerp_plot + transition_time(FixationIndex)
animate(antwerp_anim, nframes = 30, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE))
?animate
animate(antwerp_anim, nframes = 120, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
View(tracking_data)
?reindex
??reindex
antwerp_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(5,12)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
antwerp_plot
antwerp_anim = antwerp_plot + transition_time(FixationIndex)
animate(antwerp_anim, nframes = 120, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
animate(antwerp_anim, nframes = 120, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
rownames(Antwerpen_S1) <- 1:nrow(Antwerpen_S1)
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(5,12)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_anim = map_plot + transition_time()
map_anim = map_plot + transition_time(range = c(1,503))
map_anim = map_plot + transition_time(range = 503)
?tranistion_time
?transition_time
map_anim = map_plot + transition_time(index)
animate(antwerp_anim, nframes = 120, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
?animate
animate(antwerp_anim, nframes = 500, fps = 25, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(10,20)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_anim = map_plot + transition_time(index)
animate(antwerp_anim, nframes = 500, fps = 25, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
View(Antwerpen_S1)
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
#annotation_custom(rasterGrob(img,
#                             width = unit(1,"npc"),
#                             height = unit(1,"npc")),
#                  -Inf, Inf, -Inf, Inf) +
geom_point(alpha = 0.7) +
scale_size(range = c(10,20)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_anim = map_plot + transition_time(Timestamp)
animate(antwerp_anim, nframes = 500, fps = 10, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
test123 <- c(0, 1, 2, 3, 4, 12)
test123
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
geom_point(alpha = 0.7) +
scale_size(range = c(10,20)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_anim = map_plot + labs(title = "{frame_time}"), transition_time(index) + shadow_mark()
animate(antwerp_anim, nframes = 500, fps = 10, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
map_anim = map_plot + labs(title = "{frame_time}") + transition_time(index) + shadow_mark()
animate(antwerp_anim, nframes = 500, fps = 10, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
map_anim = map_plot + labs(title = "{frame_time}") + transition_time(index) + shadow_mark()
animate(antwerp_anim, nframes = 20, fps = 2, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 2)
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(index) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 20, fps = 2, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 2)
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(FixationIndex) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 20, fps = 2, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 2)
animate(map_anim, nframes = 500, fps = 10, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
geom_point(alpha = 0.7) +
scale_size(range = c(2,12)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_plot <- ggplot(Antwerpen_S1, aes(x = MappedFixationPointX, y = MappedFixationPointY, size = FixationDuration, color = user
))+
background_image(img)+
geom_point(alpha = 0.7) +
scale_size(range = c(2,12)) +
#facet_wrap(~StimuliName) +
#scale_y_reverse()
xlim(0,dim_img[2])+
ylim(dim_img[1],0)
map_plot
map_anim = map_plot +
labs(title = "Frame = {frame_time}") +
transition_time(FixationIndex) +
shadow_mark(past = TRUE) +
theme(plot.title = element_text(size = 26, face ="bold"))
animate(map_anim, nframes = 500, fps = 10, renderer = gifski_renderer(file = "map animation.gif", loop = TRUE),
width = dim_img[2], height = dim_img[1], end_pause = 20)
